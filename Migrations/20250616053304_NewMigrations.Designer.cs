// <auto-generated />
using System;
using AspApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspApi.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250616053304_NewMigrations")]
    partial class NewMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspApi.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("Comments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "This is the content for comment number 1.",
                            CreatedOn = new DateTime(2023, 1, 16, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 1,
                            Title = "Comment Title 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "This is the content for comment number 2.",
                            CreatedOn = new DateTime(2023, 1, 17, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 2,
                            Title = "Comment Title 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "This is the content for comment number 3.",
                            CreatedOn = new DateTime(2023, 1, 18, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 3,
                            Title = "Comment Title 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "This is the content for comment number 4.",
                            CreatedOn = new DateTime(2023, 1, 19, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 4,
                            Title = "Comment Title 4"
                        },
                        new
                        {
                            Id = 5,
                            Content = "This is the content for comment number 5.",
                            CreatedOn = new DateTime(2023, 1, 20, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 5,
                            Title = "Comment Title 5"
                        },
                        new
                        {
                            Id = 6,
                            Content = "This is the content for comment number 6.",
                            CreatedOn = new DateTime(2023, 1, 21, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 6,
                            Title = "Comment Title 6"
                        },
                        new
                        {
                            Id = 7,
                            Content = "This is the content for comment number 7.",
                            CreatedOn = new DateTime(2023, 1, 22, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 7,
                            Title = "Comment Title 7"
                        },
                        new
                        {
                            Id = 8,
                            Content = "This is the content for comment number 8.",
                            CreatedOn = new DateTime(2023, 1, 23, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 8,
                            Title = "Comment Title 8"
                        },
                        new
                        {
                            Id = 9,
                            Content = "This is the content for comment number 9.",
                            CreatedOn = new DateTime(2023, 1, 24, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 9,
                            Title = "Comment Title 9"
                        },
                        new
                        {
                            Id = 10,
                            Content = "This is the content for comment number 10.",
                            CreatedOn = new DateTime(2023, 1, 25, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 10,
                            Title = "Comment Title 10"
                        },
                        new
                        {
                            Id = 11,
                            Content = "This is the content for comment number 11.",
                            CreatedOn = new DateTime(2023, 1, 26, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 11,
                            Title = "Comment Title 11"
                        },
                        new
                        {
                            Id = 12,
                            Content = "This is the content for comment number 12.",
                            CreatedOn = new DateTime(2023, 1, 27, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 12,
                            Title = "Comment Title 12"
                        },
                        new
                        {
                            Id = 13,
                            Content = "This is the content for comment number 13.",
                            CreatedOn = new DateTime(2023, 1, 28, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 13,
                            Title = "Comment Title 13"
                        },
                        new
                        {
                            Id = 14,
                            Content = "This is the content for comment number 14.",
                            CreatedOn = new DateTime(2023, 1, 29, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 14,
                            Title = "Comment Title 14"
                        },
                        new
                        {
                            Id = 15,
                            Content = "This is the content for comment number 15.",
                            CreatedOn = new DateTime(2023, 1, 30, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 15,
                            Title = "Comment Title 15"
                        },
                        new
                        {
                            Id = 16,
                            Content = "This is the content for comment number 16.",
                            CreatedOn = new DateTime(2023, 1, 31, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 16,
                            Title = "Comment Title 16"
                        },
                        new
                        {
                            Id = 17,
                            Content = "This is the content for comment number 17.",
                            CreatedOn = new DateTime(2023, 2, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 17,
                            Title = "Comment Title 17"
                        },
                        new
                        {
                            Id = 18,
                            Content = "This is the content for comment number 18.",
                            CreatedOn = new DateTime(2023, 2, 2, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 18,
                            Title = "Comment Title 18"
                        },
                        new
                        {
                            Id = 19,
                            Content = "This is the content for comment number 19.",
                            CreatedOn = new DateTime(2023, 2, 3, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 19,
                            Title = "Comment Title 19"
                        },
                        new
                        {
                            Id = 20,
                            Content = "This is the content for comment number 20.",
                            CreatedOn = new DateTime(2023, 2, 4, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 20,
                            Title = "Comment Title 20"
                        },
                        new
                        {
                            Id = 21,
                            Content = "This is the content for comment number 21.",
                            CreatedOn = new DateTime(2023, 2, 5, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 21,
                            Title = "Comment Title 21"
                        },
                        new
                        {
                            Id = 22,
                            Content = "This is the content for comment number 22.",
                            CreatedOn = new DateTime(2023, 2, 6, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 22,
                            Title = "Comment Title 22"
                        },
                        new
                        {
                            Id = 23,
                            Content = "This is the content for comment number 23.",
                            CreatedOn = new DateTime(2023, 2, 7, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 23,
                            Title = "Comment Title 23"
                        },
                        new
                        {
                            Id = 24,
                            Content = "This is the content for comment number 24.",
                            CreatedOn = new DateTime(2023, 2, 8, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 24,
                            Title = "Comment Title 24"
                        },
                        new
                        {
                            Id = 25,
                            Content = "This is the content for comment number 25.",
                            CreatedOn = new DateTime(2023, 2, 9, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 25,
                            Title = "Comment Title 25"
                        },
                        new
                        {
                            Id = 26,
                            Content = "This is the content for comment number 26.",
                            CreatedOn = new DateTime(2023, 2, 10, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 26,
                            Title = "Comment Title 26"
                        },
                        new
                        {
                            Id = 27,
                            Content = "This is the content for comment number 27.",
                            CreatedOn = new DateTime(2023, 2, 11, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 27,
                            Title = "Comment Title 27"
                        },
                        new
                        {
                            Id = 28,
                            Content = "This is the content for comment number 28.",
                            CreatedOn = new DateTime(2023, 2, 12, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 28,
                            Title = "Comment Title 28"
                        },
                        new
                        {
                            Id = 29,
                            Content = "This is the content for comment number 29.",
                            CreatedOn = new DateTime(2023, 2, 13, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 29,
                            Title = "Comment Title 29"
                        },
                        new
                        {
                            Id = 30,
                            Content = "This is the content for comment number 30.",
                            CreatedOn = new DateTime(2023, 2, 14, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StockId = 30,
                            Title = "Comment Title 30"
                        });
                });

            modelBuilder.Entity("AspApi.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastDiv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("MarketCap")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Purchase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stocks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Company Name 1",
                            Industry = "Finance",
                            LastDiv = 0.11m,
                            MarketCap = 110000000000L,
                            Purchase = 110.50m,
                            Symbol = "SYM01"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Company Name 2",
                            Industry = "Healthcare",
                            LastDiv = 0.12m,
                            MarketCap = 120000000000L,
                            Purchase = 121.00m,
                            Symbol = "SYM02"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Company Name 3",
                            Industry = "Technology",
                            LastDiv = 0.13m,
                            MarketCap = 130000000000L,
                            Purchase = 131.50m,
                            Symbol = "SYM03"
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "Company Name 4",
                            Industry = "Finance",
                            LastDiv = 0.14m,
                            MarketCap = 140000000000L,
                            Purchase = 142.00m,
                            Symbol = "SYM04"
                        },
                        new
                        {
                            Id = 5,
                            CompanyName = "Company Name 5",
                            Industry = "Healthcare",
                            LastDiv = 0.15m,
                            MarketCap = 150000000000L,
                            Purchase = 152.50m,
                            Symbol = "SYM05"
                        },
                        new
                        {
                            Id = 6,
                            CompanyName = "Company Name 6",
                            Industry = "Technology",
                            LastDiv = 0.16m,
                            MarketCap = 160000000000L,
                            Purchase = 163.00m,
                            Symbol = "SYM06"
                        },
                        new
                        {
                            Id = 7,
                            CompanyName = "Company Name 7",
                            Industry = "Finance",
                            LastDiv = 0.17m,
                            MarketCap = 170000000000L,
                            Purchase = 173.50m,
                            Symbol = "SYM07"
                        },
                        new
                        {
                            Id = 8,
                            CompanyName = "Company Name 8",
                            Industry = "Healthcare",
                            LastDiv = 0.18m,
                            MarketCap = 180000000000L,
                            Purchase = 184.00m,
                            Symbol = "SYM08"
                        },
                        new
                        {
                            Id = 9,
                            CompanyName = "Company Name 9",
                            Industry = "Technology",
                            LastDiv = 0.19m,
                            MarketCap = 190000000000L,
                            Purchase = 194.50m,
                            Symbol = "SYM09"
                        },
                        new
                        {
                            Id = 10,
                            CompanyName = "Company Name 10",
                            Industry = "Finance",
                            LastDiv = 0.20m,
                            MarketCap = 200000000000L,
                            Purchase = 205.00m,
                            Symbol = "SYM10"
                        },
                        new
                        {
                            Id = 11,
                            CompanyName = "Company Name 11",
                            Industry = "Healthcare",
                            LastDiv = 0.21m,
                            MarketCap = 210000000000L,
                            Purchase = 215.50m,
                            Symbol = "SYM11"
                        },
                        new
                        {
                            Id = 12,
                            CompanyName = "Company Name 12",
                            Industry = "Technology",
                            LastDiv = 0.22m,
                            MarketCap = 220000000000L,
                            Purchase = 226.00m,
                            Symbol = "SYM12"
                        },
                        new
                        {
                            Id = 13,
                            CompanyName = "Company Name 13",
                            Industry = "Finance",
                            LastDiv = 0.23m,
                            MarketCap = 230000000000L,
                            Purchase = 236.50m,
                            Symbol = "SYM13"
                        },
                        new
                        {
                            Id = 14,
                            CompanyName = "Company Name 14",
                            Industry = "Healthcare",
                            LastDiv = 0.24m,
                            MarketCap = 240000000000L,
                            Purchase = 247.00m,
                            Symbol = "SYM14"
                        },
                        new
                        {
                            Id = 15,
                            CompanyName = "Company Name 15",
                            Industry = "Technology",
                            LastDiv = 0.25m,
                            MarketCap = 250000000000L,
                            Purchase = 257.50m,
                            Symbol = "SYM15"
                        },
                        new
                        {
                            Id = 16,
                            CompanyName = "Company Name 16",
                            Industry = "Finance",
                            LastDiv = 0.26m,
                            MarketCap = 260000000000L,
                            Purchase = 268.00m,
                            Symbol = "SYM16"
                        },
                        new
                        {
                            Id = 17,
                            CompanyName = "Company Name 17",
                            Industry = "Healthcare",
                            LastDiv = 0.27m,
                            MarketCap = 270000000000L,
                            Purchase = 278.50m,
                            Symbol = "SYM17"
                        },
                        new
                        {
                            Id = 18,
                            CompanyName = "Company Name 18",
                            Industry = "Technology",
                            LastDiv = 0.28m,
                            MarketCap = 280000000000L,
                            Purchase = 289.00m,
                            Symbol = "SYM18"
                        },
                        new
                        {
                            Id = 19,
                            CompanyName = "Company Name 19",
                            Industry = "Finance",
                            LastDiv = 0.29m,
                            MarketCap = 290000000000L,
                            Purchase = 299.50m,
                            Symbol = "SYM19"
                        },
                        new
                        {
                            Id = 20,
                            CompanyName = "Company Name 20",
                            Industry = "Healthcare",
                            LastDiv = 0.30m,
                            MarketCap = 300000000000L,
                            Purchase = 310.00m,
                            Symbol = "SYM20"
                        },
                        new
                        {
                            Id = 21,
                            CompanyName = "Company Name 21",
                            Industry = "Technology",
                            LastDiv = 0.31m,
                            MarketCap = 310000000000L,
                            Purchase = 320.50m,
                            Symbol = "SYM21"
                        },
                        new
                        {
                            Id = 22,
                            CompanyName = "Company Name 22",
                            Industry = "Finance",
                            LastDiv = 0.32m,
                            MarketCap = 320000000000L,
                            Purchase = 331.00m,
                            Symbol = "SYM22"
                        },
                        new
                        {
                            Id = 23,
                            CompanyName = "Company Name 23",
                            Industry = "Healthcare",
                            LastDiv = 0.33m,
                            MarketCap = 330000000000L,
                            Purchase = 341.50m,
                            Symbol = "SYM23"
                        },
                        new
                        {
                            Id = 24,
                            CompanyName = "Company Name 24",
                            Industry = "Technology",
                            LastDiv = 0.34m,
                            MarketCap = 340000000000L,
                            Purchase = 352.00m,
                            Symbol = "SYM24"
                        },
                        new
                        {
                            Id = 25,
                            CompanyName = "Company Name 25",
                            Industry = "Finance",
                            LastDiv = 0.35m,
                            MarketCap = 350000000000L,
                            Purchase = 362.50m,
                            Symbol = "SYM25"
                        },
                        new
                        {
                            Id = 26,
                            CompanyName = "Company Name 26",
                            Industry = "Healthcare",
                            LastDiv = 0.36m,
                            MarketCap = 360000000000L,
                            Purchase = 373.00m,
                            Symbol = "SYM26"
                        },
                        new
                        {
                            Id = 27,
                            CompanyName = "Company Name 27",
                            Industry = "Technology",
                            LastDiv = 0.37m,
                            MarketCap = 370000000000L,
                            Purchase = 383.50m,
                            Symbol = "SYM27"
                        },
                        new
                        {
                            Id = 28,
                            CompanyName = "Company Name 28",
                            Industry = "Finance",
                            LastDiv = 0.38m,
                            MarketCap = 380000000000L,
                            Purchase = 394.00m,
                            Symbol = "SYM28"
                        },
                        new
                        {
                            Id = 29,
                            CompanyName = "Company Name 29",
                            Industry = "Healthcare",
                            LastDiv = 0.39m,
                            MarketCap = 390000000000L,
                            Purchase = 404.50m,
                            Symbol = "SYM29"
                        },
                        new
                        {
                            Id = 30,
                            CompanyName = "Company Name 30",
                            Industry = "Technology",
                            LastDiv = 0.40m,
                            MarketCap = 400000000000L,
                            Purchase = 415.00m,
                            Symbol = "SYM30"
                        });
                });

            modelBuilder.Entity("AspApi.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AspApi.Models.Comment", b =>
                {
                    b.HasOne("AspApi.Models.Stock", "Stock")
                        .WithMany("Comments")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AspApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AspApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AspApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspApi.Models.Stock", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
